import{_ as e,c as t,o as r,ag as o}from"./chunks/framework.CP8pidWN.js";const s="/blog/assets/1742390402898.bDWmVy7h.png",p="/blog/assets/1742390527432.BLy_8zwD.png",m=JSON.parse('{"title":"API网关服务","description":"","frontmatter":{},"headers":[],"relativePath":"05-微服务与分布式系统/0502-分布式/050206-API网关服务.md","filePath":"05-微服务与分布式系统/0502-分布式/050206-API网关服务.md"}'),n={name:"05-微服务与分布式系统/0502-分布式/050206-API网关服务.md"};function l(i,a,c,_,d,g){return r(),t("div",null,a[0]||(a[0]=[o('<h1 id="api网关服务" tabindex="-1">API网关服务 <a class="header-anchor" href="#api网关服务" aria-label="Permalink to &quot;API网关服务&quot;">​</a></h1><h2 id="spring-cloud-gateway" tabindex="-1">Spring Cloud Gateway <a class="header-anchor" href="#spring-cloud-gateway" aria-label="Permalink to &quot;Spring Cloud Gateway&quot;">​</a></h2><blockquote><p>参考: <a href="https://mp.weixin.qq.com/s/yWCFa4ZClRMjl1S9asw8wg" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/s/yWCFa4ZClRMjl1S9asw8wg</a></p></blockquote><p>基于WebFlux, <strong>WebFlux是一个典型非阻塞异步的框架</strong> ，它的核心是基于Reactor的相关API实现的。相对于传统的web框架来说， <strong>它可以运行在诸如Netty，Undertow及支持Servlet3.1的容器上</strong> 。</p><h3 id="工作流程" tabindex="-1">工作流程 <a class="header-anchor" href="#工作流程" aria-label="Permalink to &quot;工作流程&quot;">​</a></h3><p><img src="'+s+'" alt="1742390402898"></p><p>1）Route：路由是网关的基本构件。它由ID、目标URI、谓词集合和过滤器集合定义。如果聚合谓词为真，则匹配路由。</p><p>2）Predicate：参照Java8的新特性Predicate。这允许开发人员匹配HTTP请求中的任何内容，比如头或参数。</p><p>3）Filter：可以在发送下游请求之前或之后修改请求和响应。</p><p>核心逻辑就是路由转发，执行过滤器链。</p><p><img src="'+p+'" alt="1742390527432"></p><p>Filter在**“pre”类型的过滤器可以做参数校验、权限校验、流量监控、日志输出、协议转换<strong>等，在</strong>“post”类型的过滤器中可以做响应内容、响应头的修改，日志的输出，流量监控**等</p>',12)]))}const u=e(n,[["render",l]]);export{m as __pageData,u as default};
