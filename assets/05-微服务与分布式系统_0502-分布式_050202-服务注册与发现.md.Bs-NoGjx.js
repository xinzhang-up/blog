import{_ as e,c as t,o as r,ag as l}from"./chunks/framework.CP8pidWN.js";const s="/blog/assets/1741492191164.BtdHccbi.png",i="/blog/assets/1741492203141.DqIAz8SS.png",o="/blog/assets/1741492368078.DTTuif6p.png",n="/blog/assets/1741492775481.iEXu5mhp.png",p="/blog/assets/1741492832138.BRa1wHbx.png",c="/blog/assets/1741492850018.DF_uNFp5.png",q=JSON.parse('{"title":"服务注册与发现","description":"","frontmatter":{},"headers":[],"relativePath":"05-微服务与分布式系统/0502-分布式/050202-服务注册与发现.md","filePath":"05-微服务与分布式系统/0502-分布式/050202-服务注册与发现.md"}'),u={name:"05-微服务与分布式系统/0502-分布式/050202-服务注册与发现.md"};function _(h,a,g,m,d,b){return r(),t("div",null,a[0]||(a[0]=[l('<h1 id="服务注册与发现" tabindex="-1">服务注册与发现 <a class="header-anchor" href="#服务注册与发现" aria-label="Permalink to &quot;服务注册与发现&quot;">​</a></h1><h2 id="spring-cloud-eureka" tabindex="-1">Spring Cloud Eureka <a class="header-anchor" href="#spring-cloud-eureka" aria-label="Permalink to &quot;Spring Cloud Eureka&quot;">​</a></h2><blockquote><p>参考:</p><ul><li><p><a href="https://mp.weixin.qq.com/s/9pE4uLUovI0FIFr5pPsbWw" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/s/9pE4uLUovI0FIFr5pPsbWw</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/n_s5m9SEynP2oMaNk3vBPg" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/s/n_s5m9SEynP2oMaNk3vBPg</a></p></li></ul></blockquote><h3 id="架构" tabindex="-1">架构 <a class="header-anchor" href="#架构" aria-label="Permalink to &quot;架构&quot;">​</a></h3><p><img src="'+s+'" alt="1741492191164"></p><h3 id="工作流程" tabindex="-1">工作流程 <a class="header-anchor" href="#工作流程" aria-label="Permalink to &quot;工作流程&quot;">​</a></h3><p><img src="'+i+'" alt="1741492203141"></p><h3 id="核心组件" tabindex="-1">核心组件 <a class="header-anchor" href="#核心组件" aria-label="Permalink to &quot;核心组件&quot;">​</a></h3><h4 id="服务端" tabindex="-1">服务端 <a class="header-anchor" href="#服务端" aria-label="Permalink to &quot;服务端&quot;">​</a></h4><ul><li><p><strong>InstanceRegistry（实例注册表）</strong></p><p>负责存储所有已注册的服务实例信息，包括它们的元数据，如实例ID、主机名、端口等, 具体功能包括:</p><ul><li>注册服务实例：register 方法负责将服务实例注册到注册表。</li><li>取消注册服务实例：cancel 方法用于从注册表中移除不再可用的实例。</li><li>获取服务实例信息：getInstancesById 方法用于获取特定服务的所有实例信息。</li></ul></li></ul><p><img src="'+o+'" alt="1741492368078"></p><ul><li><strong>LeaseManager（租约管理器）</strong></li></ul><p>管理实例的租约, 确保实例的健康状态</p><ul><li><p>注册实例并创建租约：register 方法负责为新注册的实例创建租约。</p></li><li><p>续约租约：renew 方法用于更新租约的到期时间，延长租约的有效期。</p></li><li><p>移除租约：cancel 方法负责在实例取消注册时移除租约。</p></li><li><p><strong>SelfPreservationFilter(自我保护过滤器)</strong></p></li></ul><p>特殊情况，由于网络不稳定15秒内85%服务器出现心跳异常，一次收不到就算心跳一次。旨在确保在网络抖动等异常情况下，Eureka服务器不会过早地剔除正常运行的服务实例，从而保持服务的可用性和稳定性。在代码层面，SelfPreservationFilter定期计算心跳续约失败的比例，根据配置启动或关闭自我保护模式</p><p><img src="'+n+'" alt="1741492775481"></p><h4 id="客户端" tabindex="-1">客户端 <a class="header-anchor" href="#客户端" aria-label="Permalink to &quot;客户端&quot;">​</a></h4><ul><li><strong>InstanceInfo（实例信息）</strong>,在应用启动时，Eureka客户端创建InstanceInfo对象，包含实例的元数据。它在服务实例启动时创建并初始化，存储了该实例的基本信息，如实例ID、主机名、端口和状态。它通过HTTP请求将元数据注册到Eureka服务器。</li></ul><p><img src="'+p+'" alt="1741492832138"></p><ul><li><strong>EurekaHttpClient（Eureka HTTP客户端）</strong>, 它用于客户端与Eureka服务器的通信，发送注册、续约、取消注册等HTTP请求，获取注册表信息。</li></ul><p><img src="'+c+'" alt="1741492850018"></p>',21)]))}const f=e(u,[["render",_]]);export{q as __pageData,f as default};
